{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Fitting a piecewise-exponential model (PEM) to simulated data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {
    "collapsed": false,
    "hidden": true
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "INFO:stancache.seed:Setting seed to 1245502385\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The autoreload extension is already loaded. To reload it, use:\n",
      "  %reload_ext autoreload\n"
     ]
    }
   ],
   "source": [
    "%load_ext autoreload\n",
    "%autoreload 2\n",
    "%matplotlib inline\n",
    "import random\n",
    "random.seed(1100038344)\n",
    "import survivalstan\n",
    "import numpy as np\n",
    "import pandas as pd\n",
    "from stancache import stancache\n",
    "from matplotlib import pyplot as plt"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## The model\n",
    "\n",
    "This style of modeling is often called the \"piecewise exponential model\", or PEM. It is the simplest case where we estimate the *hazard* of an event occurring in a time period as the outcome, rather than estimating the *survival* (ie, time to event) as the outcome.\n",
    "\n",
    "Recall that, in the context of survival modeling, we have two models:\n",
    "\n",
    "1. A model for **Survival ($S$)**, ie the probability of surviving to time $t$:\n",
    "\n",
    "  $$ S(t)=Pr(Y > t) $$\n",
    "\n",
    "2. A model for the **instantaneous *hazard* $\\lambda$**, ie the probability of a failure event occuring in the interval [$t$, $t+\\delta t$], given survival to time $t$:\n",
    "\n",
    "  $$ \\lambda(t) =  \\lim_{\\delta t \\rightarrow 0 } \\; \\frac{Pr( t \\le Y \\le t + \\delta t | Y > t)}{\\delta t} $$\n",
    "\n",
    "\n",
    "By definition, these two are related to one another by the following equation:\n",
    "\n",
    "  $$ \\lambda(t) = \\frac{-S'(t)}{S(t)} $$\n",
    "  \n",
    "Solving this, yields the following:\n",
    "\n",
    "  $$ S(t) = \\exp\\left( -\\int_0^t \\lambda(z) dz \\right) $$\n",
    "\n",
    "This model is called the **piecewise exponential model** because of this relationship between the Survival and hazard functions.  It's piecewise because we are not estimating the *instantaneous* hazard; we are instead breaking time periods up into pieces and estimating the hazard for each piece.\n",
    "\n",
    "There are several variations on the PEM model implemented in `survivalstan`. In this notebook, we are exploring just one of them."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### A note about data formatting \n",
    "\n",
    "When we model *Survival*, we typically operate on data in time-to-event form. In this form, we have one record per `Subject` (ie, per patient). Each record contains `[event_status, time_to_event]` as the outcome. This data format is sometimes called *per-subject*.\n",
    "\n",
    "When we model the *hazard* by comparison, we typically operate on data that are transformed to include one record per `Subject` per `time_period`.  This is called *per-timepoint* or *long* form.\n",
    "\n",
    "All other things being equal, a model for *Survival* will typically estimate more efficiently (faster & smaller memory footprint) than one for *hazard* simply because the data are larger in the per-timepoint form than the per-subject form. The benefit of the *hazard* models is increased flexibility in terms of specifying the baseline hazard, time-varying effects, and introducing time-varying covariates.\n",
    "\n",
    "In this example, we are demonstrating use of the standard **PEM survival model**, which uses data in long form. The `stan` code expects to recieve data in this structure."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Stan code for the model\n",
    "\n",
    "This model is provided in `survivalstan.models.pem_survival_model`. Let's take a look at the stan code. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/*  Variable naming:\n",
      " // dimensions\n",
      " N          = total number of observations (length of data)\n",
      " S          = number of sample ids\n",
      " T          = max timepoint (number of timepoint ids)\n",
      " M          = number of covariates\n",
      " \n",
      " // main data matrix (per observed timepoint*record)\n",
      " s          = sample id for each obs\n",
      " t          = timepoint id for each obs\n",
      " event      = integer indicating if there was an event at time t for sample s\n",
      " x          = matrix of real-valued covariates at time t for sample n [N, X]\n",
      " \n",
      " // timepoint-specific data (per timepoint, ordered by timepoint id)\n",
      " t_obs      = observed time since origin for each timepoint id (end of period)\n",
      " t_dur      = duration of each timepoint period (first diff of t_obs)\n",
      " \n",
      "*/\n",
      "// Jacqueline Buros Novik <jackinovik@gmail.com>\n",
      "\n",
      "data {\n",
      "  // dimensions\n",
      "  int<lower=1> N;\n",
      "  int<lower=1> S;\n",
      "  int<lower=1> T;\n",
      "  int<lower=0> M;\n",
      "  \n",
      "  // data matrix\n",
      "  int<lower=1, upper=N> s[N];     // sample id\n",
      "  int<lower=1, upper=T> t[N];     // timepoint id\n",
      "  int<lower=0, upper=1> event[N]; // 1: event, 0:censor\n",
      "  matrix[N, M] x;                 // explanatory vars\n",
      "  \n",
      "  // timepoint data\n",
      "  vector<lower=0>[T] t_obs;\n",
      "  vector<lower=0>[T] t_dur;\n",
      "}\n",
      "transformed data {\n",
      "  vector[T] log_t_dur;  // log-duration for each timepoint\n",
      "  int n_trans[S, T];  \n",
      "  \n",
      "  log_t_dur = log(t_obs);\n",
      "\n",
      "  // n_trans used to map each sample*timepoint to n (used in gen quantities)\n",
      "  // map each patient/timepoint combination to n values\n",
      "  for (n in 1:N) {\n",
      "      n_trans[s[n], t[n]] = n;\n",
      "  }\n",
      "\n",
      "  // fill in missing values with n for max t for that patient\n",
      "  // ie assume \"last observed\" state applies forward (may be problematic for TVC)\n",
      "  // this allows us to predict failure times >= observed survival times\n",
      "  for (samp in 1:S) {\n",
      "      int last_value;\n",
      "      last_value = 0;\n",
      "      for (tp in 1:T) {\n",
      "          // manual says ints are initialized to neg values\n",
      "          // so <=0 is a shorthand for \"unassigned\"\n",
      "          if (n_trans[samp, tp] <= 0 && last_value != 0) {\n",
      "              n_trans[samp, tp] = last_value;\n",
      "          } else {\n",
      "              last_value = n_trans[samp, tp];\n",
      "          }\n",
      "      }\n",
      "  }  \n",
      "}\n",
      "parameters {\n",
      "  vector[T] log_baseline_raw; // unstructured baseline hazard for each timepoint t\n",
      "  vector[M] beta;         // beta for each covariate\n",
      "  real<lower=0> baseline_sigma;\n",
      "  real log_baseline_mu;\n",
      "}\n",
      "transformed parameters {\n",
      "  vector[N] log_hazard;\n",
      "  vector[T] log_baseline;     // unstructured baseline hazard for each timepoint t\n",
      "  \n",
      "  log_baseline = log_baseline_mu + log_baseline_raw + log_t_dur;\n",
      "  \n",
      "  for (n in 1:N) {\n",
      "    log_hazard[n] = log_baseline[t[n]] + x[n,]*beta;\n",
      "  }\n",
      "}\n",
      "model {\n",
      "  beta ~ cauchy(0, 2);\n",
      "  event ~ poisson_log(log_hazard);\n",
      "  log_baseline_mu ~ normal(0, 1);\n",
      "  baseline_sigma ~ normal(0, 1);\n",
      "  log_baseline_raw ~ normal(0, baseline_sigma);\n",
      "}\n",
      "generated quantities {\n",
      "  real log_lik[N];\n",
      "  vector[T] baseline;\n",
      "  real y_hat_time[S];      // predicted failure time for each sample\n",
      "  int y_hat_event[S];      // predicted event (0:censor, 1:event)\n",
      "  \n",
      "  // compute raw baseline hazard, for summary/plotting\n",
      "  baseline = exp(log_baseline_mu + log_baseline_raw);\n",
      "  \n",
      "  // prepare log_lik for loo-psis\n",
      "  for (n in 1:N) {\n",
      "      log_lik[n] = poisson_log_log(event[n], log_hazard[n]);\n",
      "  }\n",
      "\n",
      "  // posterior predicted values\n",
      "  for (samp in 1:S) {\n",
      "      int sample_alive;\n",
      "      sample_alive = 1;\n",
      "      for (tp in 1:T) {\n",
      "        if (sample_alive == 1) {\n",
      "              int n;\n",
      "              int pred_y;\n",
      "              real log_haz;\n",
      "              \n",
      "              // determine predicted value of this sample's hazard\n",
      "              n = n_trans[samp, tp];\n",
      "              log_haz = log_baseline[tp] + x[n,] * beta;\n",
      "              \n",
      "              // now, make posterior prediction of an event at this tp\n",
      "              if (log_haz < log(pow(2, 30))) \n",
      "                  pred_y = poisson_log_rng(log_haz);\n",
      "              else\n",
      "                  pred_y = 9; \n",
      "              \n",
      "              // summarize survival time (observed) for this pt\n",
      "              if (pred_y >= 1) {\n",
      "                  // mark this patient as ineligible for future tps\n",
      "                  // note: deliberately treat 9s as events \n",
      "                  sample_alive = 0;\n",
      "                  y_hat_time[samp] = t_obs[tp];\n",
      "                  y_hat_event[samp] = 1;\n",
      "              }\n",
      "              \n",
      "          }\n",
      "      } // end per-timepoint loop\n",
      "      \n",
      "      // if patient still alive at max\n",
      "      if (sample_alive == 1) {\n",
      "          y_hat_time[samp] = t_obs[T];\n",
      "          y_hat_event[samp] = 0;\n",
      "      }\n",
      "  } // end per-sample loop  \n",
      "}\n"
     ]
    }
   ],
   "source": [
    "print(survivalstan.models.pem_survival_model)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "This may seem pretty intimidating, but once you get used to the [Stan language](http://mc-stan.org/documentation/) you may find it's pretty powerful. \n",
    "\n",
    "One of the goals of [survivalstan]() is to allow you to edit the stan code directly, if you choose to do so. Or to reference Stan code for models others have written. This expands the range of what [survivalstan]() can do."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Simulate survival data "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "In order to demonstrate the use of this model, we will first simulate some survival data using `survivalstan.sim.sim_data_exp_correlated`. As the name implies, this function simulates data assuming a constant hazard throughout the follow-up time period, which is consistent with the Exponential survival function.\n",
    "\n",
    "This function includes two simulated covariates by default (`age` and `sex`). We also simulate a situation where hazard is a function of the simulated value for `sex`. \n",
    "\n",
    "We also center the `age` variable since this will make it easier to interpret estimates of the baseline hazard.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "INFO:stancache.stancache:sim_data_exp_correlated: cache_filename set to sim_data_exp_correlated.cached.N_100.censor_time_20.rate_coefs_21453428780.rate_form_1 + sex.pkl\n",
      "INFO:stancache.stancache:sim_data_exp_correlated: Starting execution\n",
      "INFO:stancache.stancache:sim_data_exp_correlated: Execution completed (0:00:00.024619 elapsed)\n",
      "INFO:stancache.stancache:sim_data_exp_correlated: Saving results to cache\n"
     ]
    }
   ],
   "source": [
    "d = stancache.cached(\n",
    "    survivalstan.sim.sim_data_exp_correlated,\n",
    "    N=100,\n",
    "    censor_time=20,\n",
    "    rate_form='1 + sex',\n",
    "    rate_coefs=[-3, 0.5],\n",
    ")\n",
    "d['age_centered'] = d['age'] - d['age'].mean()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "*Aside: In order to make this a more reproducible example, this code is using a file-caching function `stancache.cached` to wrap a function call to `survivalstan.sim.sim_data_exp_correlated`. *"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Explore simulated data"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Here is what these data look like - this is `per-subject` or `time-to-event` form:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>age</th>\n",
       "      <th>sex</th>\n",
       "      <th>rate</th>\n",
       "      <th>true_t</th>\n",
       "      <th>t</th>\n",
       "      <th>event</th>\n",
       "      <th>index</th>\n",
       "      <th>age_centered</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>39</td>\n",
       "      <td>male</td>\n",
       "      <td>0.082085</td>\n",
       "      <td>14.798745</td>\n",
       "      <td>14.798745</td>\n",
       "      <td>True</td>\n",
       "      <td>0</td>\n",
       "      <td>-16.33</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>47</td>\n",
       "      <td>female</td>\n",
       "      <td>0.049787</td>\n",
       "      <td>2.613670</td>\n",
       "      <td>2.613670</td>\n",
       "      <td>True</td>\n",
       "      <td>1</td>\n",
       "      <td>-8.33</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>53</td>\n",
       "      <td>female</td>\n",
       "      <td>0.049787</td>\n",
       "      <td>81.586870</td>\n",
       "      <td>20.000000</td>\n",
       "      <td>False</td>\n",
       "      <td>2</td>\n",
       "      <td>-2.33</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>54</td>\n",
       "      <td>male</td>\n",
       "      <td>0.082085</td>\n",
       "      <td>17.647537</td>\n",
       "      <td>17.647537</td>\n",
       "      <td>True</td>\n",
       "      <td>3</td>\n",
       "      <td>-1.33</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>49</td>\n",
       "      <td>male</td>\n",
       "      <td>0.082085</td>\n",
       "      <td>6.346437</td>\n",
       "      <td>6.346437</td>\n",
       "      <td>True</td>\n",
       "      <td>4</td>\n",
       "      <td>-6.33</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   age     sex      rate     true_t          t  event  index  age_centered\n",
       "0   39    male  0.082085  14.798745  14.798745   True      0        -16.33\n",
       "1   47  female  0.049787   2.613670   2.613670   True      1         -8.33\n",
       "2   53  female  0.049787  81.586870  20.000000  False      2         -2.33\n",
       "3   54    male  0.082085  17.647537  17.647537   True      3         -1.33\n",
       "4   49    male  0.082085   6.346437   6.346437   True      4         -6.33"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "d.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "*It's not that obvious from the field names, but in this example \"subjects\" are indexed by the field `index`.*"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "We can plot these data using `lifelines`, or the rudimentary plotting functions provided by `survivalstan`."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.legend.Legend at 0x7f39e153b950>"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x7f39cfe4a510>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "survivalstan.utils.plot_observed_survival(df=d[d['sex']=='female'], event_col='event', time_col='t', label='female')\n",
    "survivalstan.utils.plot_observed_survival(df=d[d['sex']=='male'], event_col='event', time_col='t', label='male')\n",
    "plt.legend()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Transform to `long` or `per-timepoint` form"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Finally, since this is a PEM model, we transform our data to `long` or `per-timepoint` form."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "INFO:stancache.stancache:prep_data_long_surv: cache_filename set to prep_data_long_surv.cached.df_17750466280.event_col_event.time_col_t.pkl\n",
      "INFO:stancache.stancache:prep_data_long_surv: Starting execution\n",
      "INFO:stancache.stancache:prep_data_long_surv: Execution completed (0:00:00.388285 elapsed)\n",
      "INFO:stancache.stancache:prep_data_long_surv: Saving results to cache\n"
     ]
    }
   ],
   "source": [
    "dlong = stancache.cached(\n",
    "    survivalstan.prep_data_long_surv,\n",
    "    df=d, event_col='event', time_col='t'\n",
    ")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "We now have one record per timepoint (distinct values of `end_time`) per subject (`index`, in the original data frame)."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>age</th>\n",
       "      <th>sex</th>\n",
       "      <th>rate</th>\n",
       "      <th>true_t</th>\n",
       "      <th>t</th>\n",
       "      <th>event</th>\n",
       "      <th>index</th>\n",
       "      <th>age_centered</th>\n",
       "      <th>end_time</th>\n",
       "      <th>end_failure</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>133</th>\n",
       "      <td>47</td>\n",
       "      <td>female</td>\n",
       "      <td>0.049787</td>\n",
       "      <td>2.61367</td>\n",
       "      <td>2.61367</td>\n",
       "      <td>True</td>\n",
       "      <td>1</td>\n",
       "      <td>-8.33</td>\n",
       "      <td>2.394245</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>80</th>\n",
       "      <td>47</td>\n",
       "      <td>female</td>\n",
       "      <td>0.049787</td>\n",
       "      <td>2.61367</td>\n",
       "      <td>2.61367</td>\n",
       "      <td>True</td>\n",
       "      <td>1</td>\n",
       "      <td>-8.33</td>\n",
       "      <td>2.395736</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>83</th>\n",
       "      <td>47</td>\n",
       "      <td>female</td>\n",
       "      <td>0.049787</td>\n",
       "      <td>2.61367</td>\n",
       "      <td>2.61367</td>\n",
       "      <td>True</td>\n",
       "      <td>1</td>\n",
       "      <td>-8.33</td>\n",
       "      <td>2.502706</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>125</th>\n",
       "      <td>47</td>\n",
       "      <td>female</td>\n",
       "      <td>0.049787</td>\n",
       "      <td>2.61367</td>\n",
       "      <td>2.61367</td>\n",
       "      <td>True</td>\n",
       "      <td>1</td>\n",
       "      <td>-8.33</td>\n",
       "      <td>2.549188</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>71</th>\n",
       "      <td>47</td>\n",
       "      <td>female</td>\n",
       "      <td>0.049787</td>\n",
       "      <td>2.61367</td>\n",
       "      <td>2.61367</td>\n",
       "      <td>True</td>\n",
       "      <td>1</td>\n",
       "      <td>-8.33</td>\n",
       "      <td>2.613670</td>\n",
       "      <td>True</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "     age     sex      rate   true_t        t event  index  age_centered  \\\n",
       "133   47  female  0.049787  2.61367  2.61367  True      1         -8.33   \n",
       "80    47  female  0.049787  2.61367  2.61367  True      1         -8.33   \n",
       "83    47  female  0.049787  2.61367  2.61367  True      1         -8.33   \n",
       "125   47  female  0.049787  2.61367  2.61367  True      1         -8.33   \n",
       "71    47  female  0.049787  2.61367  2.61367  True      1         -8.33   \n",
       "\n",
       "     end_time end_failure  \n",
       "133  2.394245       False  \n",
       "80   2.395736       False  \n",
       "83   2.502706       False  \n",
       "125  2.549188       False  \n",
       "71   2.613670        True  "
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "dlong.query('index == 1').sort_values('end_time').tail()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Fit stan model"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Now, we are ready to fit our model using `survivalstan.fit_stan_survival_model`. \n",
    "\n",
    "We pass a few parameters to the fit function, many of which are required. See ?survivalstan.fit_stan_survival_model for details. \n",
    "\n",
    "Similar to what we did above, we are asking `survivalstan` to cache this model fit object. See [stancache](http://github.com/jburos/stancache) for more details on how this works. Also, if you didn't want to use the cache, you could omit the parameter `FIT_FUN` and `survivalstan` would use the standard pystan functionality.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "INFO:stancache.stancache:Step 1: Get compiled model code, possibly from cache\n",
      "INFO:stancache.stancache:StanModel: cache_filename set to anon_model.cython_0_25_2.model_code_5118842489520038317.pystan_2_14_0_0.stanmodel.pkl\n",
      "INFO:stancache.stancache:StanModel: Loading result from cache\n",
      "INFO:stancache.stancache:Step 2: Get posterior draws from model, possibly from cache\n",
      "INFO:stancache.stancache:sampling: cache_filename set to anon_model.cython_0_25_2.model_code_5118842489520038317.pystan_2_14_0_0.stanfit.chains_4.data_14507016511.iter_5000.seed_9001.pkl\n",
      "INFO:stancache.stancache:sampling: Loading result from cache\n"
     ]
    }
   ],
   "source": [
    "testfit = survivalstan.fit_stan_survival_model(\n",
    "    model_cohort = 'test model',\n",
    "    model_code = survivalstan.models.pem_survival_model,\n",
    "    df = dlong,\n",
    "    sample_col = 'index',\n",
    "    timepoint_end_col = 'end_time',\n",
    "    event_col = 'end_failure',\n",
    "    formula = '~ age_centered + sex',\n",
    "    iter = 5000,\n",
    "    chains = 4,\n",
    "    seed = 9001,\n",
    "    FIT_FUN = stancache.cached_stan_fit,\n",
    "    )\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Superficial review of convergence\n",
    "\n",
    "We will note here some top-level summaries of posterior draws -- this is a minimal example so it's unlikely that this model converged very well. \n",
    "\n",
    "In practice, you would want to do a lot more investigation of convergence issues, etc. For now the goal is to demonstrate the functionalities available here."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "We can summarize posterior estimates for a single parameter, (e.g. the built-in Stan parameter `lp__`):"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "            mean   se_mean         sd       2.5%        50%       97.5%      Rhat\n",
      "lp__ -258.914979  6.067607  49.665504 -335.83595 -267.33087 -154.100868  1.085588\n"
     ]
    }
   ],
   "source": [
    "survivalstan.utils.print_stan_summary([testfit], pars='lp__')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Or, for sets of parameters with the same name:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                          mean   se_mean        sd      2.5%       50%     97.5%      Rhat\n",
      "log_baseline_raw[0]   0.019647  0.001436  0.143627 -0.265423  0.008856  0.351903  1.000186\n",
      "log_baseline_raw[1]   0.017001  0.001451  0.145123 -0.276477  0.006995  0.348198  1.000221\n",
      "log_baseline_raw[2]   0.017916  0.001475  0.147465 -0.283370  0.007572  0.357371  1.000288\n",
      "log_baseline_raw[3]   0.017542  0.001455  0.145524 -0.276583  0.008317  0.351408  1.000975\n",
      "log_baseline_raw[4]   0.017227  0.001463  0.146328 -0.278237  0.006810  0.353518  1.000206\n",
      "log_baseline_raw[5]   0.014864  0.001482  0.148171 -0.289185  0.006228  0.359035  1.000175\n",
      "log_baseline_raw[6]   0.012331  0.001413  0.141270 -0.275576  0.005273  0.327449  1.000171\n",
      "log_baseline_raw[7]   0.007920  0.001509  0.150910 -0.304167  0.003191  0.339291  1.000073\n",
      "log_baseline_raw[8]   0.008752  0.001404  0.140400 -0.274269  0.003630  0.316078  1.000433\n",
      "log_baseline_raw[9]   0.008926  0.001436  0.143608 -0.286753  0.003888  0.319980  0.999990\n",
      "log_baseline_raw[10]  0.009011  0.001439  0.143859 -0.289257  0.004465  0.322414  0.999994\n",
      "log_baseline_raw[11]  0.004890  0.001452  0.145208 -0.306954  0.003050  0.331526  1.000125\n",
      "log_baseline_raw[12]  0.008431  0.001442  0.144245 -0.285667  0.004344  0.330919  0.999826\n",
      "log_baseline_raw[13]  0.008531  0.001461  0.146150 -0.300336  0.003858  0.336951  0.999741\n",
      "log_baseline_raw[14]  0.007133  0.001426  0.142569 -0.292241  0.004296  0.317077  1.000004\n",
      "log_baseline_raw[15]  0.007492  0.001421  0.142050 -0.287254  0.003846  0.323929  0.999866\n",
      "log_baseline_raw[16]  0.008341  0.001447  0.144716 -0.285362  0.005005  0.323623  0.999916\n",
      "log_baseline_raw[17]  0.006150  0.001398  0.139799 -0.287581  0.003530  0.313004  1.000583\n",
      "log_baseline_raw[18]  0.006208  0.001414  0.141440 -0.287870  0.003043  0.310741  0.999955\n",
      "log_baseline_raw[19]  0.004626  0.001407  0.140725 -0.286533  0.001647  0.318195  0.999982\n",
      "log_baseline_raw[20]  0.007053  0.001424  0.142352 -0.298405  0.003217  0.332473  1.000008\n",
      "log_baseline_raw[21]  0.006165  0.001448  0.144757 -0.301705  0.003087  0.324310  0.999954\n",
      "log_baseline_raw[22]  0.003023  0.001443  0.144289 -0.299801  0.000831  0.330782  0.999736\n",
      "log_baseline_raw[23]  0.003489  0.001455  0.145501 -0.308853  0.001102  0.323494  0.999748\n",
      "log_baseline_raw[24]  0.004883  0.001422  0.142161 -0.302533  0.001940  0.319808  1.000362\n",
      "log_baseline_raw[25] -0.000134  0.001419  0.141871 -0.311378 -0.000005  0.304250  0.999907\n",
      "log_baseline_raw[26] -0.000183  0.001417  0.141678 -0.306077  0.000268  0.315511  0.999709\n",
      "log_baseline_raw[27]  0.000082  0.001406  0.140576 -0.307312  0.000120  0.302780  0.999945\n",
      "log_baseline_raw[28]  0.001481  0.001387  0.138691 -0.296750  0.001219  0.305398  0.999783\n",
      "log_baseline_raw[29]  0.000518  0.001427  0.142696 -0.298523 -0.000299  0.306153  0.999623\n",
      "log_baseline_raw[30] -0.000567  0.001401  0.140102 -0.310931  0.001061  0.290790  0.999853\n",
      "log_baseline_raw[31]  0.002251  0.001418  0.141821 -0.308225  0.001303  0.306985  0.999873\n",
      "log_baseline_raw[32] -0.000592  0.001458  0.145825 -0.312424  0.000043  0.316410  0.999696\n",
      "log_baseline_raw[33] -0.004592  0.001385  0.138487 -0.304364 -0.002543  0.294671  0.999654\n",
      "log_baseline_raw[34] -0.003992  0.001454  0.145389 -0.322561 -0.001881  0.302946  0.999755\n",
      "log_baseline_raw[35] -0.004156  0.001409  0.140897 -0.306749 -0.001493  0.294782  0.999690\n",
      "log_baseline_raw[36] -0.005276  0.001409  0.140950 -0.325573 -0.002215  0.291857  0.999829\n",
      "log_baseline_raw[37] -0.007617  0.001415  0.141474 -0.321741 -0.002645  0.289491  0.999988\n",
      "log_baseline_raw[38] -0.007937  0.001408  0.140822 -0.313421 -0.004623  0.286457  0.999982\n",
      "log_baseline_raw[39] -0.007657  0.001364  0.136358 -0.312765 -0.002851  0.285250  1.000174\n",
      "log_baseline_raw[40] -0.008427  0.001410  0.140992 -0.322515 -0.003162  0.282210  0.999950\n",
      "log_baseline_raw[41] -0.006690  0.001425  0.142507 -0.319207 -0.002328  0.285721  0.999908\n",
      "log_baseline_raw[42] -0.010126  0.001443  0.144295 -0.339026 -0.003639  0.292575  0.999805\n",
      "log_baseline_raw[43] -0.008422  0.001427  0.142724 -0.336195 -0.002332  0.284262  1.000084\n",
      "log_baseline_raw[44] -0.009589  0.001405  0.140526 -0.320643 -0.003248  0.274365  1.000060\n",
      "log_baseline_raw[45] -0.010275  0.001418  0.141758 -0.330956 -0.003702  0.273868  1.000145\n",
      "log_baseline_raw[46] -0.010149  0.001441  0.144062 -0.338806 -0.004575  0.289066  1.000731\n",
      "log_baseline_raw[47] -0.010984  0.001418  0.141784 -0.330928 -0.004726  0.283092  0.999755\n",
      "log_baseline_raw[48] -0.010872  0.001390  0.139015 -0.330739 -0.004454  0.280835  1.000222\n",
      "log_baseline_raw[49] -0.009884  0.001403  0.140311 -0.324124 -0.004117  0.275271  0.999847\n",
      "log_baseline_raw[50] -0.011829  0.001375  0.137513 -0.314276 -0.004940  0.264868  1.000077\n",
      "log_baseline_raw[51] -0.011702  0.001458  0.145799 -0.336412 -0.005200  0.285959  0.999959\n",
      "log_baseline_raw[52] -0.010392  0.001469  0.146867 -0.349373 -0.003537  0.283791  0.999980\n",
      "log_baseline_raw[53] -0.010106  0.001403  0.140349 -0.312402 -0.003562  0.274880  0.999808\n",
      "log_baseline_raw[54] -0.012862  0.001421  0.142080 -0.338375 -0.005334  0.273351  1.000034\n",
      "log_baseline_raw[55] -0.011897  0.001398  0.139820 -0.332632 -0.004097  0.274485  0.999865\n",
      "log_baseline_raw[56] -0.012945  0.001390  0.138961 -0.331729 -0.004685  0.270914  1.000496\n",
      "log_baseline_raw[57] -0.010691  0.001411  0.141106 -0.330575 -0.005446  0.290778  0.999797\n",
      "log_baseline_raw[58] -0.012159  0.001410  0.140981 -0.339378 -0.005554  0.280880  0.999786\n",
      "log_baseline_raw[59] -0.012971  0.001433  0.143279 -0.334722 -0.005576  0.280169  1.000235\n",
      "log_baseline_raw[60] -0.010581  0.001430  0.143014 -0.328594 -0.004387  0.279914  0.999954\n",
      "log_baseline_raw[61] -0.008223  0.001426  0.142638 -0.326803 -0.003350  0.292468  0.999918\n",
      "log_baseline_raw[62] -0.012020  0.001437  0.143716 -0.334068 -0.005828  0.282619  1.000157\n",
      "log_baseline_raw[63] -0.009945  0.001425  0.142458 -0.325602 -0.004666  0.285909  0.999998\n",
      "log_baseline_raw[64] -0.011442  0.001499  0.149850 -0.349216 -0.005765  0.309402  1.000616\n",
      "log_baseline_raw[65] -0.009525  0.001438  0.143808 -0.326331 -0.004767  0.296830  1.000247\n",
      "log_baseline_raw[66] -0.011176  0.001369  0.136854 -0.322828 -0.004931  0.266086  0.999885\n",
      "log_baseline_raw[67] -0.009417  0.001412  0.141209 -0.327826 -0.004775  0.283079  1.000007\n",
      "log_baseline_raw[68] -0.007313  0.001392  0.139212 -0.315294 -0.003673  0.284527  1.000071\n",
      "log_baseline_raw[69] -0.031890  0.001490  0.149014 -0.392716 -0.014664  0.257069  1.001029\n"
     ]
    }
   ],
   "source": [
    "survivalstan.utils.print_stan_summary([testfit], pars='log_baseline_raw')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "It's also not uncommon to graphically summarize the `Rhat` values, to get a sense of similarity among the chains for particular parameters.  "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAAioAAAF+CAYAAACsxzHPAAAABHNCSVQICAgIfAhkiAAAAAlwSFlz\nAAAPYQAAD2EBqD+naQAAIABJREFUeJzs3XlwXNdh7/lvL+jG2liJnTuJw0USRUkWKcmiaMvxHtsZ\nJ16SPDv2yzixE5fHVUmc1KSyODPzKnkVj5/teMbj8Tir4+dnxZu8SJZkSpZEbaQoiqR4uBMEQOw7\n0ECv88dtgC2IELF0970Afp8qFIju0/ceHF4Avz73LL50Oo2IiIiIF/ndroCIiIjIfBRURERExLMU\nVERERMSzFFRERETEsxRURERExLMUVERERMSzFFRERETEsxRURERExLMUVERERMSzFFRERETEs4KL\nKWyM+TPg14AdQBR4GvictfZMVplvAh+d89KfWWvfmVUmDHwB+CAQBh4CPmWt7c0qUw18BXg3kAIe\nAD5jrZ1YTJ1FRERk5Vpsj8q9wJeBfcBbgCLgYWNMyZxyPwUagMbMx4fnPP9F4F3A+4EDQDNOEMn2\nLWAncH+m7AHga4usr4iIiKxgvuVsSmiMqQN6gQPW2iczj30TqLTW/k/zvCYC9AEfstZ+L/OYAV4B\n9ltrnzPG7AROArdba1/MlHkb8GOg1VrbveRKi4iIyIqx3DEqVUAaGJzz+EFjTI8x5rQx5qvGmJqs\n527HueX06MwD1loLtAN3ZR7aDwzNhJSMRzLn2rfMOouIiMgKseSgYozx4dzCedJaeyrrqZ8CHwHe\nDPwJcB/wk0x5cG4Fxay1o3MO2ZN5bqZMb/aT1tokTiBqRERERNaERQ2mneOrwC7gnuwHrbXfyfry\npDHmZeA8cBD4xTLOt2jpdDrt8/luXFBERETm8sQf0CUFFWPMV4B3Avdaa6++Xllr7UVjTD+wDSeo\ndAMhY0xkTq9KQ+Y5Mp/r55wzANRklbkhn8/H6GiUZDK10JfIMgQCfiKRErV5AanNC09tXnhq88Kb\naXMvWHRQyYSU9wL3WWvbF1C+FagFZgLNESCBM5snezDtBuBwpsxhoMoYszdrnMr9OOnu2cXUN5lM\nkUjowi4ktXnhqc0LT21eeGrztWlRs36MMV/FmWr8HuBM1lMj1topY0wZ8Jc4U427cXpR/hYoA26x\n1sazjvMO4GPAGPAlIGWtvTfrXD/B6VX5JBAC/j/gOWvtf1rE95ceGprQhV0gwaCf6uoy1OaFozYv\nPLV54anNCy/T5ivy1s/v48y8OTTn8Y8B/wwkgVtwBtNWAV04i7n9xUxIyfhspux3cRZ8+xnwB3OO\n+Zs4C749grPg23eBzyyyviIiIrKCLWsdlRVAPSoFpHc9hac2Lzy1eeGpzQvPSz0q2utHREREPEtB\nRURERDxLQUVEREQ8S0FFREREPEtBRURERDxLQUVEREQ8S0FFREREPEtBRURERDxLQUVEREQ8S0FF\nREREPEtBRURERDxLQUVEREQ8S0FFREREPEtBRURERDxLQUVEREQ8S0FFREREPEtBRURERDxLQUVE\nREQ8S0FFREREPEtBRURERDxLQUVEREQ8S0FFREREPEtBRURERDxLQUVEREQ8S0FFREREPEtBRURE\nRDxLQUVEREQ8S0FFREREPEtBRURERDxLQUVEREQ8S0FFREREPEtBRURERDxLQUVEREQ8S0FFRERE\nPEtBRURERDxLQUVEREQ8S0FFREREPEtBRURERDxLQUVEREQ8K+h2BUTWolQqxeDg4LKPEwz6SCQm\nGR6eIJFIz1uupqYGv1/vS0Rk5VFQEXHB4OAgDz9zmvLyymUdx+/3UVISIhqNkUpdP6iMj4/w1v07\nqKurW9a5RETcoKAi4pLy8koiVTXLOkbA76O0NEwoPE1ynqAiIrKSqS9YREREPEtBRURERDxLQUVE\nREQ8S0FFREREPEtBRURERDxLQUVEREQ8S0FFREREPEtBRURERDxLQUVEREQ8a1Er0xpj/gz4NWAH\nEAWeBj5nrT0zp9zngd8FqoCngE9aa89lPR8GvgB8EAgDDwGfstb2ZpWpBr4CvBtIAQ8An7HWTizy\nexQREZEVarE9KvcCXwb2AW8BioCHjTElMwWMMZ8D/hD4BHAnMAE8ZIwJZR3ni8C7gPcDB4BmnCCS\n7VvATuD+TNkDwNcWWV8RERFZwRbVo2KtfWf218aY3wF6gduBJzMPfwb4G2vtg5kyHwF6gPcB3zHG\nRICPAx+y1j6eKfMx4BVjzJ3W2ueMMTuBtwG3W2tfzJT5NPBjY8wfWWu7l/TdioiIyIqy3DEqVUAa\nGAQwxmwGGoFHZwpYa0eBZ4G7Mg/dgROQsstYoD2rzH5gaCakZDySOde+ZdZZREREVogl755sjPHh\n3MJ50lp7KvNwI06Y6JlTvCfzHEADEMsEmPnKNOL01Myy1iaNMYNZZRYkENB44UKZaWu1+Y0Fgz78\nfh8Bv29Zx/H7/VmfU/OU8REM+ggG9f+SC7rOC09tXnheauslBxXgq8Au4J4c1SUvIpGSGxeSnFKb\n31giMUlJSYjS0nBOjldcXDTvc7HpEFVVZVRXl+XkXOLQdV54avO1aUlBxRjzFeCdwL3W2qtZT3UD\nPpxek+xelQbgxawyIWNMZE6vSkPmuZky9XPOGQBqssosyOholGTy+u80JbcCAT+RSInafAGGhyeI\nRmOEwtPLOo7f76e4uIipqTip1PXbPBqNMTw8QTBYuqxziUPXeeGpzQtvps29YNFBJRNS3gvcZ61t\nz37OWnvRGNONM1PneKZ8BGdcyT9kih0BEpky38uUMcAG4HCmzGGgyhizN2ucyv04IejZxdQ3mUyR\nSOjCLiS1+Y0lEmlSqTTJVHqZR3LaOZVKzXusVCpNIpHW/0mO6TovPLX52rTYdVS+CnwYeA8wYYxp\nyDw1Yq2dyvz7i8CfG2POAZeAvwE6gB+AM7jWGPMN4AvGmCFgDPgS8JS19rlMmdPGmIeArxtjPgmE\ncKZF/7tm/IiIiKwdix0t8/tABDgEdGV9fGCmgLX273BCxddwej9KgHdYa2NZx/ks8CDw3axjvX/O\nuX4TOI0z2+dB4Ang9xZZXxEREVnBfOn0cruePS09NDShrsICCQb9VFeXoTa/sf7+fp4+cZVIVc2y\njhPw+ygtDTM5OT3vrZ/R4UHuvqmJurq6ZZ1LHLrOC09tXniZNl/etMQc8c78IxEREZE5FFRERETE\nsxRURERExLMUVERERMSzFFRERETEsxRURERExLMUVERERMSzFFRERETEsxRURERExLMUVERERMSz\nFFRERETEsxRURERExLMUVERERMSzFFRERETEsxRURERExLMUVERERMSzFFRERETEsxRURERExLMU\nVERERMSzFFRERETEsxRURERExLMUVERERMSzFFRERETEsxRURERExLMUVERERMSzFFRERETEsxRU\nRERExLMUVERERMSzFFRERETEsxRURERExLMUVERERMSzFFRERETEs4JuV0BEYCqW4PTlYbr6J4gl\nUiQSKQBa1pWxrbWSuspifD6fy7UUESk8BRURF01OJXj5wgDnOkZIptKvef5sxwhnO0aoLA9x5856\nmmrLXKiliIh7FFREXDI0HufZo5eYiiVnH2usKSVSVkQw4GcqlqS9Z4xEMs3IeIxHnu/gdrOOnZuq\n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\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x7f39cbeb5690>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "survivalstan.utils.plot_stan_summary([testfit], pars='log_baseline_raw')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Plot posterior estimates of parameters"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "We can use `plot_coefs` to summarize posterior estimates of parameters. \n",
    "\n",
    "In this basic `pem_survival_model`, we estimate a parameter for baseline hazard for each observed timepoint which is then adjusted for the duration of the timepoint.  For consistency, the baseline values are normalized to the *unit time* given in the input data. This allows us to compare hazard estimates across timepoints without having to know the duration of a timepoint. *(in general, the duration-adjusted hazard paramters are suffixed with `_raw` whereas those which are unit-normalized do not have a suffix).*\n",
    "\n",
    "In this model, the baseline hazard is parameterized by two components -- there is an overall mean across all timepoints (`log_baseline_mu`) and some variance per timepoint (`log_baseline_tp`). The degree of variance is estimated from the data as `log_baseline_sigma`. All components have weak default priors. See the stan code above for details.\n",
    "\n",
    "In this case, the model estimates a minimal degree of variance across timepoints, which is good given that the simulated data assumed a constant hazard over time. \n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "image/png": "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\nMcecEPLjbRvf+Ma3SCT0h2Tf+Ma3Mu7BvmGvvXTfIBYyP6KEbQVsyk+UtcPgHTTN5ttcXHHFN0km\nkySTRdZZR3+lPW45Is5UHRfmc88947n2/3uX4uJizjnnPM4++zyLshJWPKZP/wh77bV3xt07G4uz\nGOkB389XvpJdviwuLubii6/wWRPj8iLufXPJbFayOEXAvL9NWTVpv/DC8GQgaj9WnKKVK66ogQwK\nq6PedhL8fD4qHXEfdBTaTqIU2aiJlpHZJh3BsjQTLbD1DUXMnn1RpIUMoj/mMXFFKehR9Tdu2TZX\n3Sgvr+CTn/wUhxxyKOXlWWtKVBrjLGtx7xVHnAUNyChMNn8zZ57CiSee4gvDdvSF1y2qnKOIsxhF\n5W+cNS6ffshG1LKzViCzE5KenuyEJE75BZ2HJ554MieccHKoHK666hoSiQSJRIIrr9R9Q9wWkZ0R\nUcK2Ebk6MtugmWvJsaxsOCeccBInnHCStROyEaeURBE1SEC8qTqK+vpa5s9/JHM/f/7DoQEnSlmJ\nGoSvvPLbbmP3z8biBqQ4q2BUOuLyYkuIspJFKQLGj01ZjUp7rjBzKXVRcUUNZEYWrKO59v15j0RI\npXp9/+8x1zvbiGonudpClCILhSnafrLWvihLaNxAqy1rWevJkCFDY9px1vqh66/fSjZ79kU5+5q4\nuqGfvZKLL/6Gzy3KwnPOOeeFLLzeiVFwsuqVRZVXnPI2f/7DtLa20NLS7Ot3DKeddhannXZmyD0X\nwXLOVZ+iLEZgz9+4/imqHL3v7cW49ff+U0NUHhoFzds35NPv7kyIErYNiVqqMAQbdT5Ljn3tQArZ\ncxU1SIDueLyf4RcVDcmp1MUtR+UiahDONvbwbCzXANIX4vJiS7EN3nGKQJSfXESFWahSB3oTctRZ\nX8E6WkgdzJWOXAOgrZ3kk45C8tdG3D44gGOPPSEziTj2WL0XMU7hD+4/837oEY5rfiau8DvPzFiT\n4/qa4uJiDjvscA499PC8ld+oiWdDQ0Po5HvbcqgmqKzayytK4ctnwmfDtncy15EyuepTnMWor5OL\nqHKE+OXjqBWZXCsGfZ24eylUyd1ZECVsG9JXEzZsnSXHQpSSKAVSb1LN7tPxfhG4tYgaGKMae1QH\nl2uvQxS5lOn+pr8UgXzCLCSurq4u5s27m/vuuzvvE7H7uu8vF4Uqdv2poMeRa+Lx5JOPk06nSadT\n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\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x7f39cbeb59d0>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "survivalstan.utils.plot_coefs([testfit], element='baseline')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "We can also summarize the posterior estimates for our `beta` coefficients. This is actually the default behavior of `plot_coefs`. Here we hope to see the posterior estimates of beta coefficients include the value we used for our simulation (0.5)."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "image/png": "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\nRK5CYII=\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x7f3966fe3990>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "survivalstan.utils.plot_coefs([testfit])"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Posterior predictive checking\n",
    "\n",
    "Finally, `survivalstan` provides some utilities for posterior predictive checking.\n",
    "\n",
    "The goal of posterior-predictive checking is to compare the uncertainty of model predictions to observed values.\n",
    "\n",
    "We are not doing *true* out-of-sample predictions, but we are able to sanity-check our model's calibration. We expect approximately 5% of observed values to fall outside of their corresponding 95% posterior-predicted intervals.\n",
    "\n",
    "By default, `survivalstan`'s plot_pp_survival method will plot whiskers at the 2.5th and 97.5th percentile values, corresponding to 95% predicted intervals."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.legend.Legend at 0x7f3966f1d510>"
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x7f39cfe0ccd0>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "survivalstan.utils.plot_pp_survival([testfit], fill=False)\n",
    "survivalstan.utils.plot_observed_survival(df=d, event_col='event', time_col='t', color='green', label='observed')\n",
    "plt.legend()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "We can also summarize and plot survival by our covariates of interest, provided they are included in the original dataframe provided to `fit_stan_survival_model`."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": [
    "survivalstan.utils.plot_pp_survival([testfit], by='sex')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "This plot can also be customized by a variety of aesthetic elements"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": [
    "survivalstan.utils.plot_pp_survival([testfit], by='sex', pal=['red', 'blue'])"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Building up the plot semi-manually, for more customization"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "We can also access the utility methods within `survivalstan.utils` to more or less produce the same plot. This sequence is intended to both illustrate how the above-described plot was constructed, and expose some of the \n",
    "functionality in a more concrete fashion.\n",
    "\n",
    "Probably the most useful element is being able to summarize & return posterior-predicted values to begin with:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": [
    "ppsurv = survivalstan.utils.prep_pp_survival_data([testfit], by='sex')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Here are what these data look like:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": [
    "ppsurv.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "(Note that this itself is a summary of the posterior draws returned by `survivalstan.utils.prep_pp_data`. In this case, the survival stats are summarized by values of `['iter', 'model_cohort', by]`. "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "We can then call out to `survivalstan.utils._plot_pp_survival_data` to construct the plot. In this case, we overlay the posterior predicted intervals with observed values."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": [
    "subplot = plt.subplots(1, 1)\n",
    "survivalstan.utils._plot_pp_survival_data(ppsurv.query('sex == \"male\"').copy(),\n",
    "                                          subplot=subplot, color='blue', alpha=0.5)\n",
    "survivalstan.utils._plot_pp_survival_data(ppsurv.query('sex == \"female\"').copy(),\n",
    "                                          subplot=subplot, color='red', alpha=0.5)\n",
    "survivalstan.utils.plot_observed_survival(df=d[d['sex']=='female'], event_col='event', time_col='t',\n",
    "                                          color='red', label='female')\n",
    "survivalstan.utils.plot_observed_survival(df=d[d['sex']=='male'], event_col='event', time_col='t',\n",
    "                                          color='blue', label='male')\n",
    "plt.legend()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "collapsed": true
   },
   "source": [
    "## Use plotly to summarize posterior predicted values"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "First, we will precompute 50th and 95th posterior intervals for each observed timepoint, by group."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "ppsummary = ppsurv.groupby(['sex','event_time'])['survival'].agg({\n",
    "        '95_lower': lambda x: np.percentile(x, 2.5),\n",
    "        '95_upper': lambda x: np.percentile(x, 97.5),\n",
    "        '50_lower': lambda x: np.percentile(x, 25),\n",
    "        '50_upper': lambda x: np.percentile(x, 75),\n",
    "        'median': lambda x: np.percentile(x, 50),\n",
    "    }).reset_index()\n",
    "shade_colors = dict(male='rgba(0, 128, 128, {})', female='rgba(214, 12, 140, {})')\n",
    "line_colors = dict(male='rgb(0, 128, 128)', female='rgb(214, 12, 140)')\n",
    "ppsummary.sort_values(['sex', 'event_time'], inplace=True)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Next, we construct our graph \"traces\", consisting of 3 elements (solid line and two shaded areas) per observed group."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": [
    "import plotly\n",
    "import plotly.plotly as py\n",
    "import plotly.graph_objs as go\n",
    "plotly.offline.init_notebook_mode(connected=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "data5 = list()\n",
    "for grp, grp_df in ppsummary.groupby('sex'):\n",
    "    x = list(grp_df['event_time'].values)\n",
    "    x_rev = x[::-1]\n",
    "    y_upper = list(grp_df['50_upper'].values)\n",
    "    y_lower = list(grp_df['50_lower'].values)\n",
    "    y_lower = y_lower[::-1]\n",
    "    y2_upper = list(grp_df['95_upper'].values)\n",
    "    y2_lower = list(grp_df['95_lower'].values)\n",
    "    y2_lower = y2_lower[::-1]\n",
    "    y = list(grp_df['median'].values)\n",
    "    my_shading50 = go.Scatter(\n",
    "        x = x + x_rev,\n",
    "        y = y_upper + y_lower,\n",
    "        fill = 'tozerox',\n",
    "        fillcolor = shade_colors[grp].format(0.3),\n",
    "        line = go.Line(color = 'transparent'),\n",
    "        showlegend = True,\n",
    "        name = '{} - 50% CI'.format(grp),\n",
    "    )\n",
    "    my_shading95 = go.Scatter(\n",
    "        x = x + x_rev,\n",
    "        y = y2_upper + y2_lower,\n",
    "        fill = 'tozerox',\n",
    "        fillcolor = shade_colors[grp].format(0.1),\n",
    "        line = go.Line(color = 'transparent'),\n",
    "        showlegend = True,\n",
    "        name = '{} - 95% CI'.format(grp),\n",
    "    )\n",
    "    my_line = go.Scatter(\n",
    "        x = x,\n",
    "        y = y,\n",
    "        line = go.Line(color=line_colors[grp]),\n",
    "        mode = 'lines',\n",
    "        name = grp,\n",
    "    )\n",
    "    data5.append(my_line)    \n",
    "    data5.append(my_shading50)\n",
    "    data5.append(my_shading95)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Finally, we build a minimal layout structure to house our graph:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "layout5 = go.Layout(\n",
    "    yaxis=dict(\n",
    "        title='Survival (%)',\n",
    "        #zeroline=False,\n",
    "        tickformat='.0%',\n",
    "    ),\n",
    "    xaxis=dict(title='Days since enrollment')\n",
    ")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Here is our plot:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": [
    "py.iplot(go.Figure(data=data5, layout=layout5), filename='survivalstan/pem_survival_model_ppsummary')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "*Note: this plot will not render in github, since github disables iframes. You can however view it in nbviewer or on plotly's website directly*"
   ]
  }
 ],
 "metadata": {
  "anaconda-cloud": {},
  "celltoolbar": "Edit Metadata",
  "kernelspec": {
   "display_name": "Python [conda env:newbladder2]",
   "language": "python",
   "name": "conda-env-newbladder2-py"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 2
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython2",
   "version": "2.7.13"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 0
}
